@using System.Reflection
@using Siren.Components.RequestContextPanel.Authentication
@using Mythetech.Components.Components.SimpleTabs
<SirenStack Class="h-100 w-100 flex-grow-1">
    <SirenStack Row="true" Class="w-100 h-100 flex-grow-1" Style="min-width:calc(100% - 3.5rem)">
        
            <SimpleTabs Class="mt-4 flex-grow-1" Style="width: 90%" @ref="_tabs">
                <Tab Name="Auth" Icon="@SirenIcons.Auth">
                    <ChildContent>
                        <AuthenticationPanel />
                    </ChildContent>
                </Tab>
                <Tab Name="Headers" Icon="@SirenIcons.Headers">
                    <ChildContent>
                        <HeadersPanel NetworkRequest="@AppState.Active"/>
                    </ChildContent>
                </Tab>
                <Tab Name="Cookies" Icon="@SirenIcons.Cookies">
                    <ChildContent>
                        <CookiePanel NetworkRequest="@AppState.Active"/>
                    </ChildContent>
                </Tab>
            </SimpleTabs>
        
    </SirenStack>
    @if(string.IsNullOrWhiteSpace(_openTab))
    {
        <SirenStack AlignItems="AlignItems.Center" Justify="Justify.Center">
            <SirenText>No panel selected</SirenText>
        </SirenStack>
    }
</SirenStack>
@code {
    [Inject]
    SirenAppState AppState { get; set; }

    [Parameter]
    public EventCallback PanelClosed { get; set; } = default!;

    [Parameter]
    public bool IsOpen { get; set; } = false;

    private SimpleTabs? _tabs;

    private MudToggleGroup<string> _toggle;

    private Dictionary<string, int> TabLookup = new()
    {
        {"Auth", 0 },
        { "Headers", 1 },
        {"Cookies", 2 }
    };

    private string _openTab = "";

    public void Open(string tab)
    {
        _openTab = tab;
        _tabs?.SelectTab(tab);

        StateHasChanged();
    }
}

